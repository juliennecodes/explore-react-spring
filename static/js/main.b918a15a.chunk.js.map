{"version":3,"sources":["components/BackgroundColour.js","components/Hello.js","components/FontSize.js","components/Rotate.js","components/TransformTranslate.js","components/Rotate30.js","components/Comparison.js","components/InterpolateA.js","components/InterpolateB.js","components/InterpolateC.js","components/InterpolateD.js","components/SvgExperiment.js","components/InterpolateE.js","App.js","index.js"],"names":["BackgroundColour","useState","toggled","setToggled","colourChange","useSpring","backgroundColor","className","div","style","onClick","Hello","fade","opacity","p","FontSize","fontSizeChange","fontSize","Rotate","rotate","transform","svg","xmlns","height","viewBox","width","d","fill","TransformTranslate","translate","Rotate30","degree","setDegree","Comparison","translateAnimated","InterpolateA","y","interpolate","InterpolateB","currentSize","setCurrentSize","x","InterpolateC","rect","stroke","strokeWidth","InterpolateD","staticX","SvgExperiment","InterpolateE","setX","a","App","fadeIn","from","to","increaseNumbers","number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b918a15a.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport function BackgroundColour() {\n  const [toggled, setToggled] = useState(false);\n  const teal = \"hsl(183, 100%, 54%)\";\n  const blue = \"hsl(221, 55%, 53%)\";\n  const colourChange = useSpring({\n    backgroundColor: toggled ? teal : blue,\n  });\n\n  return (\n    <div className=\"background-colour\">\n      <animated.div style={colourChange} className=\"square\"></animated.div>\n      <button onClick={() => setToggled(!toggled)}>change colour</button>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport function Hello() {\n  const [toggled, setToggled] = useState(false);\n  const fade = useSpring({\n    opacity: toggled ? 1 : 0,\n  });\n\n  return (\n    <div className=\"hello\">\n      <animated.p style={fade}>Hello</animated.p>\n      <button onClick={() => setToggled(true)}>appear</button>\n      <button onClick={() => setToggled(false)}>disappear</button>\n    </div>\n  );\n}\n","import {useState} from 'react';\nimport {useSpring, animated} from 'react-spring';\n\nexport function FontSize(){\n    const [toggled, setToggled] = useState(false);\n    const fontSizeChange = useSpring({\n        fontSize: toggled? \"100px\" : \"10px\",\n    })\n\n    return(\n        <div className=\"font-size\">\n            <button onClick={()=> setToggled(!toggled)}>\n                click me\n            </button>\n            <animated.p style={fontSizeChange}> \n                hello\n            </animated.p>\n\n            \n        </div>\n    );\n}","import { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport function Rotate() {\n  const [toggled, setToggled] = useState(false);\n\n  const rotate = useSpring({\n    transform: toggled ? \"rotate(20deg)\" : \"rotate(0deg)\",\n  });\n\n  return (\n    <div className=\"rotate\">\n      <animated.svg\n      className=\"block shape\"\n      style={rotate}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n      >\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n        <path d=\"M13.35 20.13c-.76.69-1.93.69-2.69-.01l-.11-.1C5.3 15.27 1.87 12.16 2 8.28c.06-1.7.93-3.33 2.34-4.29 2.64-1.8 5.9-.96 7.66 1.1 1.76-2.06 5.02-2.91 7.66-1.1 1.41.96 2.28 2.59 2.34 4.29.14 3.88-3.3 6.99-8.55 11.76l-.1.09z\" />\n      </animated.svg>\n      <button onClick={() => setToggled(!toggled)}>Click me</button>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport function TransformTranslate() {\n  const [toggled, setToggled] = useState(false);\n\n  const translate = useSpring({\n    transform: toggled ? \"translate3d(50px, 0, 0)\" : \"translate3d(0px, 0, 0)\",\n  });\n\n  return (\n    <div className=\"transform-translate\">\n      <animated.svg\n        className=\"block shape\"\n        style={translate}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n      >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2z\" />\n      </animated.svg>\n      <button onClick={() => setToggled(!toggled)}>Click me</button>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport function Rotate30() {\n  const [degree, setDegree] = useState(0);\n  const rotate = useSpring({\n    transform: `rotate(${degree}deg)`,\n  });\n  return (\n    <div className=\"rotate\">\n      <animated.svg\n        className=\"block shape\"\n        style={rotate}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n      >\n        <g>\n          <rect fill=\"none\" height=\"24\" width=\"24\" />\n          <path d=\"M14.43,10l-1.47-4.84c-0.29-0.95-1.63-0.95-1.91,0L9.57,10H5.12c-0.97,0-1.37,1.25-0.58,1.81l3.64,2.6l-1.43,4.61 c-0.29,0.93,0.79,1.68,1.56,1.09L12,17.31l3.69,2.81c0.77,0.59,1.85-0.16,1.56-1.09l-1.43-4.61l3.64-2.6 c0.79-0.57,0.39-1.81-0.58-1.81H14.43z\" />\n        </g>\n      </animated.svg>\n      <button onClick={() => setDegree(degree + 90)}>Rotate</button>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport function Comparison() {\n  const [toggled, setToggled] = useState(false);\n\n  const translate = toggled ? \"translate3d(200px, 0, 0)\" : \"translate3d(0px, 0, 0)\";\n\n  const translateAnimated = useSpring({\n    transform: toggled ? \"translate3d(200px, 0, 0)\" : \"translate3d(0px, 0, 0)\",\n  });\n\n  return (\n    <div className=\"comparison\">\n        <h1>Comparison of not animated and animated element</h1>\n        <p>I'm comparing plain element vs animated element</p>\n        <p>One is abrupt, the other is eased</p>\n      <svg\n        className=\"block shape\"\n        style={{transform: translate}}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n      >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2z\" />\n      </svg>\n      <animated.svg\n        className=\"block shape\"\n        style={translateAnimated}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n      >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2z\" />\n      </animated.svg>\n      <button onClick={() => setToggled(!toggled)}>Click me</button>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport {useSpring, animated} from 'react-spring';\n\nexport function InterpolateA(){\n    const [toggled, setToggled] = useState(false);\n    const {y} = useSpring({\n        y: toggled ? 50 : 10,\n    })\n    return (\n        <div className=\"interpolate-a\">\n            <h1>Interpolate</h1>\n            <animated.p style={{\n                fontSize: y.interpolate(y => `${y}px`)\n            }}>Hello</animated.p>\n            <button onClick={()=> setToggled(!toggled)}>Click Me</button>\n        </div>\n    );\n}","import { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport function InterpolateB() {\n  const [currentSize, setCurrentSize] = useState(1);\n  const { x } = useSpring({\n    x: currentSize,\n  });\n\n  return (\n    <div className=\"interpolate-b\">\n      <animated.p\n        style={{\n          fontSize: x.interpolate((x) => `${x}px`),\n        }}\n      >\n        Hello\n      </animated.p>\n      <button onClick={() => setCurrentSize(currentSize * 2)}>Click Me</button>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport {useSpring, animated} from 'react-spring';\nexport function InterpolateC() {\n    const [toggled, setToggled] = useState(false);\n    const {x} = useSpring({\n        x: toggled ? 50 : 0,\n    })\n  return (\n    <div className=\"interpolate-c\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"100\"\n        viewBox=\"0 0 100 100\"\n        width=\"100\"\n      >\n        <animated.rect\n          x=\"0\"\n          y=\"0\"\n          width=\"100\"\n          height=\"100\"\n          stroke=\"black\"\n          fill=\"none\"\n        //   strokeWidth=\"25\"\n        //   style={{strokeWidth:`${x}`}}\n        // style={{strokeWidth = x.interpolate(x => `${x}`)}}\n        style={{strokeWidth : x.interpolate(x => `${x}`)}}\n        />\n      </svg>\n      <button onClick={()=> setToggled(!toggled)}>\n          Click me\n      </button>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport function InterpolateD() {\n  const [toggled, setToggled] = useState(false);\n  const staticX = toggled ? 'ooo' : 'xxx';\n  const { x } = useSpring({\n    x: toggled ? \"ooo\" : \"xxx\",\n  });\n  return (\n    <div className=\"interpolate-d\">\n      <p>{staticX}</p>\n      <animated.p>{x}</animated.p>\n      <button onClick={() => setToggled(!toggled)}>Click Me</button>\n      <p>Oh, this looks the same. I guess there is no animation when it comes to text content?</p>\n      <p>Even though the text is changing, there doesn't seem to be transition between the letterforms</p>\n    </div>\n  );\n}\n","export function SvgExperiment() {\n  return (\n    <div className=\"svg-experiment\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"200\"\n        height=\"200\"\n        // viewBox=\"0 0 200 200\"\n        // viewBox=\"0 0 100 100\"\n        // viewBox=\"0 0 50 50\"\n        viewBox=\"0 0 250 250\"\n        // viewBox=\"0 0 500 500\"\n\n\n\n      >\n        <rect x=\"50\" y=\"50\" width=\"200\" height=\"200\" fill=\"pink\"></rect>\n        <rect x=\"0\" y=\"0\" width=\"50\" height=\"50\" fill=\"black\"></rect>\n      </svg>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport function InterpolateE() {\n  const [x, setX] = useState(-50);\n  //   const [y, setY] = useState(0);\n  // //   const [vBX, setVbX] = useState(100);\n  // //   const [vbY, setVbY] = useState(100);\n\n  const { a } = useSpring({\n    a: x,\n  });\n\n  return (\n    <div className=\"interpolate-e\">\n      <animated.svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"200\"\n        height=\"200\"\n        // viewBox=\"0 0 100 100\"\n        viewBox={a.interpolate((a) => `${a} -30 100 100`)}\n      >\n        <rect width=\"24\" height=\"24\" fill=\"black\"></rect>\n      </animated.svg>\n      <button onClick={() => setX(x - 5)}>Move</button>\n      <p>This doesn't look like it is animating</p>\n    </div>\n  );\n}\n","import { useSpring, animated } from \"react-spring\";\nimport { BackgroundColour } from \"./components/BackgroundColour\";\nimport { Hello } from \"./components/Hello\";\nimport './App.css';\nimport { FontSize } from \"./components/FontSize\";\nimport {Rotate} from './components/Rotate';\nimport { TransformTranslate } from \"./components/TransformTranslate\";\nimport { Rotate30 } from \"./components/Rotate30\";\nimport { Comparison } from \"./components/Comparison\";\nimport { InterpolateA } from \"./components/InterpolateA\";\nimport { InterpolateB } from \"./components/InterpolateB\";\nimport { InterpolateC } from './components/InterpolateC';\nimport { InterpolateD } from \"./components/InterpolateD\";\nimport { SvgExperiment} from './components/SvgExperiment';\nimport { InterpolateE } from \"./components/InterpolateE\";\n\n\nfunction App() {\n  const fadeIn = useSpring({ from: { opacity: 0 }, to: { opacity: 1 } });\n  const increaseNumbers = useSpring({ from: { number: 0 }, to: { number: 1 } });\n\n  return (\n    <div className=\"App\">\n      <animated.p style={fadeIn}>Hello</animated.p>\n      <animated.p>{increaseNumbers.number}</animated.p>\n      <Hello />\n      <BackgroundColour />\n      <FontSize />\n      <Rotate />\n      <TransformTranslate />\n      <Rotate30 />\n      <Comparison />\n      <InterpolateA />\n      <InterpolateB />\n      <InterpolateC />\n      <InterpolateD />\n      <SvgExperiment />\n      <InterpolateE />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}